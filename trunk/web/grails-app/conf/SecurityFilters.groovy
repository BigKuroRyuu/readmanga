import org.apache.shiro.authc.SimpleAccount
import org.apache.shiro.*
import ru.readmanga.UserRequestToken
import common.api.SharedMap
import org.codehaus.groovy.grails.commons.GrailsClassUtils
import org.apache.shiro.grails.annotations.RoleRequired
import org.apache.shiro.authc.UnknownAccountException

/**
 * Generated by the Shiro plugin. This filters class protects all URLs
 * via access control by convention.
 */
class SecurityFilters {
    def cookieService
    def filters = {
        all(controller:'*', action:'*') {
            before = {
                // Ignore direct views (e.g. the default main index page).
                if (!controllerName) return true
                flash.hasBeenFiltered=false;
                try {
                    def value = cookieService.getCookie(request, 'forumSessionId')?.value
//                    println "SecurityFilters: starting $value"
                    def session = request.getSession(true)

                    if (SecurityUtils.subject.authenticated && !value && !session.autoLogin) { //logout from forum
                        session.alreadySeached = false;
                        SecurityUtils.subject?.logout()
                        println "SecurityFilters: logout"
                    }
                    if (SecurityUtils.subject.authenticated && value) { //if relogin refresh
//                        println "SecurityFilters: refrashing"
                        def user = SharedMap.get("forumCache")?.get("sessions/logged", value)?.user
                        if (!(SecurityUtils.subject?.principal?.forumId == user?.id)) {
                            session.alreadySeached = false;
                            SecurityUtils.subject?.logout()
                            println "SecurityFilters: logout"
                        }
                    }

                    if (!SecurityUtils.subject.authenticated && (!session.alreadySeached || value)) {
//                        println "SecurityFilters: authenticate $value ${session.alreadySeached}"
                        session.alreadySeached = true
                        session.autoLogin=false
                        SecurityUtils.subject.login(new UserRequestToken(request, response, value))

                    }
                } catch (UnknownAccountException e) {
                } catch (Exception e) {
                    println "SecurityFilters:" + e
                }


                def controllerClass =  grailsApplication.getArtefactByLogicalPropertyName('Controller', controllerName)

                def classAnat =  controllerClass.clazz.getAnnotation(RoleRequired)
                if (!classAnat) {
                    def action = actionName ?: (controllerClass['defaultAction'] ?: 'index')
                    def annotation = controllerClass.clazz.getDeclaredField(action).getAnnotation(RoleRequired)
                    if (!annotation) return true
                }

                // Access control by convention.
                flash.hasBeenFiltered=true;
                accessControl()

                //todo move code from ShiroFilters

            }
        }
    }
}